##################################################################
Important project info:
-----------------------
laptop: ~/projects/ACC_rhythm_processing
scc:    ~/projects/ACC_rhythm_processing
##################################################################


---------------
05-Feb-2016
---------------
% TODO:
% 1. create @ProbeResonance (from ProbeTwoRhythms) to vary nonhomogeneous 
%    poisson frequency of a single input. should return data with fMUA and
%    area power (from CalcPower) as well as fc for each sweep of 
%    frequencies (based on population FR from CalcFR).
% 2. using @ProbeResonance: vary gINPUT (Iapp) (w/num_realizations=5):
%     - with f=0 (homogeneous poisson):          calc fMUA=f(gINPUT) [based on Pxx]
%     - with f=0-100Hz (nonhomogeneous poisson): calc fc=f(gINPUT)   [based on FR]
%     (average estimates over 5 realizations; for E, If, and Is)
%     (also plot Pxx with error shading over num_realizations)
% 3. add cell ROIs to SelectData
% 4. using @ProbeTwoRhythms + SelectData & CalcFR: vary gINPUT (Iapp), f1,
%    and f2 then generate plots revealing regimes of competition vs
%    cooperation between E1 and E2: examine |(r1/sum(I1))-(r2/sum(I2))|
%    and plots outlined on paper.

% - figure out how to pass parameters to experiment through SimulateModel;
%   could use to examine how tauI affects fMUA and fc | @ProbeResonance.

% after understanding what's going on in the simple homogeenous population
% of (Na,K) cells, study the effects of adding non-spiking currents, then
% heterogeneity of single parameters (note: will require adding a layer of
% model realizations on top of everything else). i.e., continue with steps
% outlined with Nancy.


---------------
29-Jan-2016
---------------

- Create CalcPower and PlotPower to get MUA & SUA f0
- Create experiment ProbeSpikeThreshold (for each cell model in network)
	- apply steps
	- get min Iapp for spiking
	- get Vthresh
- Create experiment ProbeRhythmThreshold
	- apply steps
	- calc f0 (using CalcPower)
	- continue until target f0 or stop condition (insufficient PA or max # steps; to handle case where net is async w/o rhythm)
	- return (f,Pxx) and stats (f0,PA) for each Iapp to target
- Create PlotRastergrams for network studies (call CalcFR)
- create PlotTraces for network studies

later:
- Create CalcSpikeStats (CV, ISI, etc)
- Create CalcSpike Sync and CalcSpikeCoactivity
- create experiment ProbeCellProperties


---------------
26-Jan-2016
---------------

Create m-file function for each cell type
  (Can be optimized any time without affecting the rest of the study)
Create experiment func that sweeps over (f1,f2) grid
Create analysis func that calcs coactivity; power; sync
   (within prescribed assembly ROIs)
Create corresponding plotting function

Build network in script (1st w vanilla cells)
   (One w 1 IN and one w 2 INs)
- pass netcon (and inputs) as parameters
   (Vary coupling strength)
- loop over distribution widths per gmax
- explore how coupling and heterogeneity affect rhythm power, freqs, and coactivity for inputs at diff frequencies
I
Tip: Use ('vary',{E,width,range},'experiment',@func) on cluster. Run multiple batches for different coupling strengths. Repeat for nets with 1 and 2 INs. Analyze E pops in the same way for all sims.

Store all model files, m-files and results in a common project directory (eg, "ACC_rhythm_processing" on cluster and laptop).

##################################################################

Hi All,

I thought most of the comments about the modeling were reasonable with only a few being irrelevant or possibly based on a misinterpretation of what was done. The rejection is definitely unfortunate, but hopefully the feedback will lead to an even stronger paper. I've started thinking about how we can improve the simulation results and discussed a few ideas with Nancy. Briefly, some of the points can be addressed by simulating an additional network with two interneuron populations that result in coexisting beta and gamma rhythms in the E-cell population; I have already built and simulated that network in the context of the h-channel blocker results (shifts in simultaneous beta and gamma peaks). I can use that same network for the current paper, and we can call it a "deep layer" ACC model. The network with one interneuron population in the current manuscript that produces one rhythm at a time could be called a "superficial layer" ACC model. Those layer designations are at least somewhat supported by interneuron distributions in ACC.

The previous results looking at how different currents affect IPs in the single cell model revealed that many of the currents had redundant effects; based on that we can almost certainly eliminate many of the currents in the cell model to run additional network simulations (e.g., we do not need multiple slow potassium currents to obtain the heterogeneous IPs). That will significantly increase the number of simulations we can run in a reasonable amount of time. I can then run simulations with two inputs at different frequencies f1 and f2, varying them over a grid (instead of holding one fixed and varying the other). I can then repeat those simulations while varying the *degree of heterogeneity* of each maximal conductance one at a time (e.g., varying the width of the distribution from which values are drawn). That will reveal combinations of input frequencies and conductance-specific degrees of heterogeneity that increase coactivity among the sub-populations. This can be done in the "superficial" and "deep" layer networks to determine how the presence of one or two internal rhythm generators (producing one or two intrinsic network frequencies) affects coactivity. Finally, weak coupling between E-cells within a sub-population can be added to determine the effects of recurrent connectivity; that may increase the coactivity. I'll calculate coactivity based on activity levels as suggested. Also, we could consider exploring the effects of varying the time constant of inhibition to address the concern about basing the network models on a small number of measured IPSPs.

I think those simulations would address many of the concerns. However, I have not figured out how to approach statistical comparison of homogeneous vs heterogeneous; in fact, the simulations proposed above explore a continuum of degrees of heterogeneity instead of sets of homogeneous vs heterogeneous networks. 

I've begun assessing how feasible all of the above is and how long it would take. I'll have a better idea about that tomorrow and be able to estimate that later this week.

What do you think of this approach? Do you have any ideas for other models/simulations/approaches that may better address the modeling concerns and tie into the paper?

Thanks,
Jason

